// This file was generated by a tool; you should avoid making direct changes.
// Consider using 'partial classes' to extend these types
// Input: tensor.proto

#pragma warning disable CS0612, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace Tensorflow
{

    [global::ProtoBuf.ProtoContract()]
    public partial class TensorProto : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"dtype")]
        public DataType Dtype { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"tensor_shape")]
        public TensorShapeProto TensorShape { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"version_number")]
        public int VersionNumber { get; set; }

        [global::ProtoBuf.ProtoMember(4, Name = @"tensor_content")]
        public byte[] TensorContent { get; set; }

        [global::ProtoBuf.ProtoMember(13, Name = @"half_val", IsPacked = true)]
        public int[] HalfVals { get; set; }

        [global::ProtoBuf.ProtoMember(5, Name = @"float_val", IsPacked = true)]
        public float[] FloatVals { get; set; }

        [global::ProtoBuf.ProtoMember(6, Name = @"double_val", IsPacked = true)]
        public double[] DoubleVals { get; set; }

        [global::ProtoBuf.ProtoMember(7, Name = @"int_val", IsPacked = true)]
        public int[] IntVals { get; set; }

        [global::ProtoBuf.ProtoMember(8, Name = @"string_val")]
        public global::System.Collections.Generic.List<byte[]> StringVals { get; } = new global::System.Collections.Generic.List<byte[]>();

        [global::ProtoBuf.ProtoMember(9, Name = @"scomplex_val", IsPacked = true)]
        public float[] ScomplexVals { get; set; }

        [global::ProtoBuf.ProtoMember(10, Name = @"int64_val", IsPacked = true)]
        public long[] Int64Vals { get; set; }

        [global::ProtoBuf.ProtoMember(11, Name = @"bool_val", IsPacked = true)]
        public bool[] BoolVals { get; set; }

        [global::ProtoBuf.ProtoMember(12, Name = @"dcomplex_val", IsPacked = true)]
        public double[] DcomplexVals { get; set; }

        [global::ProtoBuf.ProtoMember(14, Name = @"resource_handle_val")]
        public global::System.Collections.Generic.List<ResourceHandleProto> ResourceHandleVals { get; } = new global::System.Collections.Generic.List<ResourceHandleProto>();

        [global::ProtoBuf.ProtoMember(15, Name = @"variant_val")]
        public global::System.Collections.Generic.List<VariantTensorDataProto> VariantVals { get; } = new global::System.Collections.Generic.List<VariantTensorDataProto>();

        [global::ProtoBuf.ProtoMember(16, Name = @"uint32_val", IsPacked = true)]
        public uint[] Uint32Vals { get; set; }

        [global::ProtoBuf.ProtoMember(17, Name = @"uint64_val", IsPacked = true)]
        public ulong[] Uint64Vals { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class VariantTensorDataProto : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"type_name")]
        [global::System.ComponentModel.DefaultValue("")]
        public string TypeName { get; set; } = "";

        [global::ProtoBuf.ProtoMember(2, Name = @"metadata")]
        public byte[] Metadata { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"tensors")]
        public global::System.Collections.Generic.List<TensorProto> Tensors { get; } = new global::System.Collections.Generic.List<TensorProto>();

    }

}

#pragma warning restore CS0612, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
